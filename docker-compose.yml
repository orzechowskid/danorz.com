# docker-compose.yml : easily bring up a complete environment for local development

version: "2"
services:
  gateway:
    build:
      # we need access to some other tools in order to build the gateway
      context: ./tools
      dockerfile: ./gateway/Dockerfile
    environment:
      - GATEWAY_PORT=${GATEWAY_PORT}
      - WEB_FRONTEND_PORT=${WEB_FRONTEND_PORT}
      - WEB_BACKEND_PORT=${WEB_BACKEND_PORT}
    network_mode: "host"
  localdb:
    build:
      args:
        - UID=${USERID}
        - USER=${USERNAME}
      context: ./tools/localdb
    environment:
      - DB_PORT=${LOCALDB_PORT}
    network_mode: "host"
    volumes:
      - ./tools/localdb/.storage:/data/db
  sessiondb:
    build:
      args:
        - UID=${USERID}
        - USER=${USERNAME}
      context: ./tools/sessiondb
    command: redis-server --appendonly yes
    network_mode: "host"
    volumes:
      - ./tools/sessiondb/.storage:/data
  web-backend:
    build:
      # we need access to some other packages and metadata in order to build the backend
      context: .
      dockerfile: ./packages/backend/Dockerfile
    depends_on:
      - localdb
      - sessiondb
    environment:
      - LOCALDB_PASS=${LOCALDB_PASS}
      - LOCALDB_URI=${LOCALDB_URI}
      - LOCALDB_USER=${LOCALDB_USER}
      - WEB_BACKEND_LOCALDB_DRIVER=${WEB_BACKEND_LOCALDB_DRIVER}
      - WEB_BACKEND_PORT=${WEB_BACKEND_PORT}
      - WEB_BACKEND_SESSION_SECRET=${WEB_BACKEND_SESSION_SECRET}
      - WEB_BACKEND_SESSIONDB_URI=${WEB_BACKEND_SESSIONDB_URI}
    network_mode: "host"
    # TODO: configure AWS creds in a separate volume
